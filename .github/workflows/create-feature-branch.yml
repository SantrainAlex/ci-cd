name: Cr√©ation Automatique de Branche Feature

on:
  issues:
    types: [assigned]

jobs:
  create-feature-branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: develop
          fetch-depth: 0

      - name: Extraire les informations de l'issue
        id: issue
        run: |
          # Nettoyer le titre de l'issue pour cr√©er un nom de branche valide
          CLEAN_TITLE=$(echo "${{ github.event.issue.title }}" | \
            iconv -f utf8 -t ascii//TRANSLIT | \
            sed -E 's/[^a-zA-Z0-9]+/-/g' | \
            sed -E 's/^-+|-+$//g' | \
            tr '[:upper:]' '[:lower:]')
          
          echo "branch_name=feature/${CLEAN_TITLE}" >> $GITHUB_OUTPUT
          echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          echo "assignee=${{ github.event.issue.assignee.login }}" >> $GITHUB_OUTPUT

      - name: Cr√©er la branche feature
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          
          # S'assurer d'√™tre sur develop et √† jour
          git checkout develop
          git pull origin develop
          
          # Cr√©er et pousser la nouvelle branche
          git checkout -b ${{ steps.issue.outputs.branch_name }}
          git push origin ${{ steps.issue.outputs.branch_name }}

      - name: Commenter l'issue
        uses: actions/github-script@v6
        with:
          script: |
            const branchName = '${{ steps.issue.outputs.branch_name }}';
            const assignee = '${{ steps.issue.outputs.assignee }}';
            
            const comment = `üéâ Branche cr√©√©e avec succ√®s !
            
            @${assignee}, une nouvelle branche a √©t√© cr√©√©e pour cette issue :
            \`${branchName}\`
            
            Cette branche a √©t√© cr√©√©e √† partir de \`develop\`. Vous pouvez commencer √† travailler dessus.
            
            Pour commencer :
            \`\`\`bash
            git fetch origin
            git checkout ${branchName}
            \`\`\`
            
            N'oubliez pas de :
            1. Faire des commits r√©guliers
            2. Suivre les conventions de commit
            3. Cr√©er une Pull Request vers \`develop\` une fois termin√©
            `;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.issue.outputs.issue_number }},
              body: comment
            });

      - name: Ajouter un label √† l'issue
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.issue.outputs.issue_number }},
              labels: ['in-progress']
            });

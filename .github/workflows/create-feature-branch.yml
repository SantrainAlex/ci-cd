name: Cr√©er une branche feature

permissions:
  contents: write
  pull-requests: write
  issues: write

on:
  issues:
    types: [assigned]

jobs:
  create-feature-branch:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'feature')
    steps:
      - uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0

      - name: Extraire les informations de l'issue
        id: issue
        run: |
          ISSUE_NUMBER="${{ github.event.issue.number }}"
          ISSUE_TITLE="${{ github.event.issue.title }}"
          ASSIGNEE="${{ github.event.issue.assignee.login }}"
          
          # Nettoyer le titre pour cr√©er un nom de branche valide
          CLEAN_TITLE=$(echo "$ISSUE_TITLE" | iconv -t ascii//TRANSLIT | sed -r 's/[~^]+//g' | sed -r 's/[^a-zA-Z0-9]+/-/g' | sed -r 's/^-+|-+$//g' | tr A-Z a-z)
          
          # Cr√©er le nom de la branche
          BRANCH_NAME="feature/${ISSUE_NUMBER}-${CLEAN_TITLE}"
          
          echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "assignee=$ASSIGNEE" >> $GITHUB_OUTPUT

      - name: Cr√©er la branche feature
        run: |
          git checkout -b "${{ steps.issue.outputs.branch_name }}"
          git push origin "${{ steps.issue.outputs.branch_name }}"

      - name: Commenter l'issue
        uses: actions/github-script@v6
        with:
          script: |
            const branchName = '${{ steps.issue.outputs.branch_name }}';
            const assignee = '${{ steps.issue.outputs.assignee }}';
            
            const comment = `‚ú® Branche feature cr√©√©e : \`${branchName}\`
            
            @${assignee}, vous pouvez maintenant commencer √† travailler sur cette fonctionnalit√©.
            
            Pour commencer :
            \`\`\`bash
            git fetch origin
            git checkout ${branchName}
            \`\`\`
            
            Une fois que vous avez termin√© :
            1. Poussez vos modifications
            2. Cr√©ez une Pull Request vers \`develop\`
            3. Attendez la validation des tests
            4. Demandez une review
            
            Bonne chance ! üöÄ`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });

      - name: Ajouter un label √† l'issue
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['en-cours']
            });

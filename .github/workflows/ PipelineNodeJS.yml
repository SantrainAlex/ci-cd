name: Node.js CI/CD Pipeline

permissions:
  contents: write
  pull-requests: write
  checks: write

on:
  push:
    branches: 
      - main
      - develop
      - 'features/**'
      - 'hotfix/**'
  pull_request:
    branches:
      - develop
      - main

jobs:
  conventional-commits-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/features/') || startsWith(github.ref, 'refs/heads/hotfix/')))
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Validate Conventional Commits
        uses: webiny/action-conventional-commits@v1.1.0
        with:
          commitTypes: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          commitScopes: ""

  validate-commit:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate commit message
        uses: wagoid/commitlint-github-action@v5
        with:
          configFile: .commitlintrc.js
          helpURL: https://github.com/conventional-changelog/commitlint/#what-is-commitlint
          commitTypes: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          commitScopes: ""

  build:
    runs-on: ubuntu-latest
    needs: [conventional-commits-check]
    if: always()

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Run tests
      run: npm test
      
    - name: Build
      run: npm run build --if-present

  # Protection des branches main et develop
  protect-branches:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
    - name: Branch Protection Check
      run: |
        echo "Les push directs sur les branches main et develop ne sont pas autoris√©s. Veuillez utiliser une Pull Request."
        exit 1